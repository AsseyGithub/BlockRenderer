--- a/client/render/item/DefaultPngItemStackHandler.java
+++ b/client/render/item/DefaultPngItemStackHandler.java
@@ -1,13 +1,18 @@
-package com.unascribed.blockrenderer.fabric.client.render.item;
+package com.unascribed.blockrenderer.forge.client.render.item;
 
+import com.unascribed.blockrenderer.forge.client.varia.StringUtils;
 import com.unascribed.blockrenderer.render.request.lambda.ImageHandler;
 import com.unascribed.blockrenderer.varia.Files;
-import net.minecraft.world.item.ItemStack;
+import net.minecraft.item.ItemStack;
+import net.minecraft.util.text.StringTextComponent;
+import net.minecraft.util.text.Style;
+import net.minecraft.util.text.TextFormatting;
+import net.minecraft.util.text.event.ClickEvent;
 
 import java.awt.image.BufferedImage;
 import java.io.File;
 
-public class DefaultPngItemStackHandler extends BaseItemStackHandler implements ImageHandler<ItemStack> {
+public class DefaultPngItemStackHandler extends BaseItemStackHandler implements ImageHandler<ItemStack>, Runnable {
 
     public DefaultPngItemStackHandler(File folder, int size, boolean useIdentifier, boolean addSize, boolean addDate) {
         super(folder, size, useIdentifier, addSize, addDate);
@@ -23,4 +28,13 @@
         future = Files.wrap("Exception whilst saving image", provider);
     }
 
+    @Override
+    public void run() {
+        Style open = Style.EMPTY
+                .applyFormat(TextFormatting.GOLD)
+                .withClickEvent(new ClickEvent(ClickEvent.Action.OPEN_FILE, folder.getAbsolutePath()));
+
+        StringUtils.addMessage(new StringTextComponent("> Finished Rendering").setStyle(open));
 }
+
+}
