--- a/client/render/RenderManager.java
+++ b/client/render/RenderManager.java
@@ -1,22 +1,22 @@
-package com.unascribed.blockrenderer.fabric.client.render;
+package com.unascribed.blockrenderer.forge.client.render;
 
-import com.unascribed.blockrenderer.fabric.client.render.report.Reporter;
+import com.unascribed.blockrenderer.forge.client.render.report.Reporter;
 import com.unascribed.blockrenderer.render.BaseRenderManager;
 import com.unascribed.blockrenderer.render.IRequest;
-import net.minecraft.ChatFormatting;
-import net.minecraft.network.chat.Component;
-import net.minecraft.network.chat.TranslatableComponent;
+import net.minecraft.util.text.ITextComponent;
+import net.minecraft.util.text.TextFormatting;
+import net.minecraft.util.text.TranslationTextComponent;
 import org.jetbrains.annotations.Nullable;
 
 import java.util.PriorityQueue;
 import java.util.Queue;
 
-public class RenderManager extends BaseRenderManager<Component> {
+public class RenderManager extends BaseRenderManager<ITextComponent> {
 
-    public static final BaseRenderManager<Component> INSTANCE = new RenderManager();
+    public static final BaseRenderManager<ITextComponent> INSTANCE = new RenderManager();
 
-    private static final Component RENDERING_GIF = new TranslatableComponent("block_renderer.render.gif").withStyle(ChatFormatting.GOLD);
-    private static final Component RENDERING_AUTO = new TranslatableComponent("block_renderer.render.auto_loop").withStyle(ChatFormatting.GOLD);
+    private static final ITextComponent RENDERING_GIF = new TranslationTextComponent("block_renderer.render.gif").withStyle(TextFormatting.GOLD);
+    private static final ITextComponent RENDERING_AUTO = new TranslationTextComponent("block_renderer.render.auto_loop").withStyle(TextFormatting.GOLD);
 
     public static Queue<IRequest> requests = new PriorityQueue<>();
     @Nullable
@@ -41,7 +41,7 @@
     }
 
     @Override
-    protected Component renderingBulk(String name) {
-        return new TranslatableComponent("block_renderer.render.bulk", name).withStyle(ChatFormatting.GOLD);
+    protected ITextComponent renderingBulk(String name) {
+        return new TranslationTextComponent("block_renderer.render.bulk", name).withStyle(TextFormatting.GOLD);
     }
 }
