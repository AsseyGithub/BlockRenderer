--- a/client/varia/MiscUtils.java
+++ b/client/varia/MiscUtils.java
@@ -1,17 +1,17 @@
-package com.unascribed.blockrenderer.forge.client.varia;
+package com.unascribed.blockrenderer.fabric.client.varia;
 
 import com.google.common.collect.Lists;
+import com.mojang.blaze3d.platform.InputConstants;
 import com.unascribed.blockrenderer.varia.logging.Log;
 import com.unascribed.blockrenderer.varia.logging.Markers;
 import net.minecraft.client.Minecraft;
-import net.minecraft.client.util.InputMappings;
-import net.minecraft.item.Item;
-import net.minecraft.item.ItemGroup;
-import net.minecraft.item.ItemStack;
-import net.minecraft.item.Items;
-import net.minecraft.util.NonNullList;
-import net.minecraft.util.ResourceLocation;
-import net.minecraftforge.registries.ForgeRegistries;
+import net.minecraft.core.NonNullList;
+import net.minecraft.core.Registry;
+import net.minecraft.resources.ResourceLocation;
+import net.minecraft.world.item.CreativeModeTab;
+import net.minecraft.world.item.Item;
+import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.item.Items;
 import org.lwjgl.glfw.GLFW;
 
 import java.util.List;
@@ -21,22 +21,22 @@
 
     //TODO: Use this to escape from Animated/Bulk Renders
     static boolean isEscapePressed() {
-        return InputMappings.isKeyDown(Minecraft.getInstance().getWindow().getWindow(), GLFW.GLFW_KEY_ESCAPE);
+        return InputConstants.isKeyDown(Minecraft.getInstance().getWindow().getWindow(), GLFW.GLFW_KEY_ESCAPE);
     }
 
     static List<ItemStack> collectStacks(Set<String> namespaces) {
         List<ItemStack> stacks = Lists.newArrayList();
         NonNullList<ItemStack> list = NonNullList.create();
 
-        for (ResourceLocation identifier : ForgeRegistries.ITEMS.getKeys()) {
+        for (ResourceLocation identifier : Registry.ITEM.keySet()) {
             if (identifier != null && namespaces.contains(identifier.getNamespace()) || namespaces.contains("*")) {
                 list.clear();
 
-                Item item = ForgeRegistries.ITEMS.getValue(identifier);
-                if (item == null || item == Items.AIR) continue;
+                Item item = Registry.ITEM.get(identifier);
+                if (item == Items.AIR) continue;
 
                 try {
-                    item.fillItemCategory(ItemGroup.TAB_SEARCH, list);
+                    item.fillItemCategory(CreativeModeTab.TAB_SEARCH, list);
                 } catch (Throwable t) {
                     Log.error(Markers.SEARCH, "Failed to get render-able items for {}", identifier, t);
                 }
