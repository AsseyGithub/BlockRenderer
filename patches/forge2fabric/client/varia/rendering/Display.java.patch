--- a/client/varia/rendering/Display.java
+++ b/client/varia/rendering/Display.java
@@ -1,15 +1,15 @@
-package com.unascribed.blockrenderer.forge.client.varia.rendering;
+package com.unascribed.blockrenderer.fabric.client.varia.rendering;
 
-import com.mojang.blaze3d.matrix.MatrixStack;
+import com.mojang.blaze3d.vertex.BufferBuilder;
+import com.mojang.blaze3d.vertex.DefaultVertexFormat;
+import com.mojang.blaze3d.vertex.PoseStack;
+import com.mojang.blaze3d.vertex.Tesselator;
 import net.minecraft.client.Minecraft;
-import net.minecraft.client.gui.AbstractGui;
-import net.minecraft.client.gui.FontRenderer;
-import net.minecraft.client.gui.screen.Screen;
-import net.minecraft.client.renderer.BufferBuilder;
-import net.minecraft.client.renderer.Tessellator;
-import net.minecraft.client.renderer.vertex.DefaultVertexFormats;
-import net.minecraft.util.text.ITextComponent;
-import net.minecraftforge.fml.client.gui.GuiUtils;
+import net.minecraft.client.gui.Font;
+import net.minecraft.client.gui.GuiComponent;
+import net.minecraft.client.gui.screens.Screen;
+import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TextComponent;
 
 import java.util.List;
 
@@ -18,40 +18,44 @@
 public interface Display {
 
     Minecraft client = Minecraft.getInstance();
-    FontRenderer font = client.font;
+    Font font = client.font;
+    Screen helper = new Screen(new TextComponent("DUMMY")) {
 
+    };
+
     static void drawRect(int x1, int y1, int x2, int y2, int color) {
-        drawRect(new MatrixStack(), x1, y1, x2, y2, color);
+        drawRect(new PoseStack(), x1, y1, x2, y2, color);
     }
 
-    static void drawRect(MatrixStack stack, int x1, int y1, int x2, int y2, int color) {
-        AbstractGui.fill(stack, x1, y1, x2, y2, color);
+    static void drawRect(PoseStack stack, int x1, int y1, int x2, int y2, int color) {
+        GuiComponent.fill(stack, x1, y1, x2, y2, color);
     }
 
-    static void drawCenteredString(ITextComponent component, int x, int y, int color) {
-        drawCenteredString(new MatrixStack(), component, x, y, color);
+    static void drawCenteredString(Component component, int x, int y, int color) {
+        drawCenteredString(new PoseStack(), component, x, y, color);
     }
 
-    static void drawCenteredString(MatrixStack stack, ITextComponent component, int x, int y, int color) {
+    static void drawCenteredString(PoseStack stack, Component component, int x, int y, int color) {
         drawCenteredString(stack, component.getString(), x, y, color);
     }
 
-    static void drawCenteredString(MatrixStack stack, String str, int x, int y, int color) {
+    static void drawCenteredString(PoseStack stack, String str, int x, int y, int color) {
         font.drawShadow(stack, str, x - font.width(str) / 2F, y, color);
     }
 
-    static void renderTooltip(Screen owner, MatrixStack stack, List<ITextComponent> tooltip, int x, int y) {
-        GuiUtils.drawHoveringText(stack, tooltip, x, y, owner.width, owner.height, -1, font);
+    static void renderTooltip(Screen owner, PoseStack stack, List<Component> tooltip, int x, int y) {
+        helper.init(client, owner.width, owner.height);
+        helper.renderComponentTooltip(stack, tooltip, x, y);
     }
 
     static void drawDirtBackground(int scaledWidth, int scaledHeight) {
-        Tessellator tessellator = Tessellator.getInstance();
+        Tesselator tessellator = Tesselator.getInstance();
         BufferBuilder bufferbuilder = tessellator.getBuilder();
 
-        client.getTextureManager().bind(AbstractGui.BACKGROUND_LOCATION);
+        client.getTextureManager().bind(GuiComponent.BACKGROUND_LOCATION);
 
         GL.color(1.0F, 1.0F, 1.0F, 1.0F);
-        bufferbuilder.begin(7, DefaultVertexFormats.POSITION_COLOR_TEX);
+        bufferbuilder.begin(7, DefaultVertexFormat.POSITION_COLOR_TEX);
 
         // 0 h
         bufferbuilder.vertex(0.0D, scaledHeight, 0.0D)
